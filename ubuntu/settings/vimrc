set nocompatible              " be iMproved, required
filetype on                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'
Plugin 'JamshedVesuna/vim-markdown-preview'
Plugin 'itchyny/lightline.vim'
Plugin 'docker/docker'
Plugin 'Valloric/YouCompleteMe'
call vundle#end()

let g:ycm_use_clangd = 0
autocmd BufRead,BufNewFile Dockerfile.* set filetype=dockerfile


" Switch syntax highlighting on
syntax on
syntax enable

" Enable file type detection and do language-dependent indenting.
filetype plugin indent on


let vim_markdown_preview_hotkey='<C-m>'
let vim_markdown_preview_github=1

" Setting up lightline
set laststatus=2
set noshowmode

if !has('gui_running')
  set t_Co=256
endif

let g:lightline = {
  \     'active': {
  \         'left': [['mode', 'paste' ], ['readonly', 'filename', 'modified']],
  \         'right': [['lineinfo'], ['percent'], ['fileformat', 'fileencoding']]
  \     }
  \ }

"set number

" hotkeys
:nmap <F6> :set invnumber<CR>

" set for c++ autocomplete
let g:ycm_python_interpreter_path = ''
let g:ycm_python_sys_path = []
let g:ycm_extra_conf_vim_data = [
  \  'g:ycm_python_interpreter_path',
  \  'g:ycm_python_sys_path'
  \]
let g:ycm_global_ycm_extra_conf = '~/.global_extra_conf.py'
