set -g mouse on
# don't rename windows automatically
set-option -g allow-rename off
# enable true color support
set -ga terminal-overrides ',*:Tc'
set -g default-terminal "tmux-256color"
# load in the pretty tmuxline
if-shell "test -f ~/.tmuxline" "source ~/.tmuxline"
# fix escape for the sake of vim
set -sg escape-time 0
# clear bindings
unbind C-b
unbind '"'
unbind %
# nicer prefix
set -g prefix C-Space
bind Space send-prefix
# splitting like spacemacs
bind / split-window -h
bind - split-window -v
# do like terminator
bind -n C-E split-window -h
bind -n C-S-Left resize-pane -L 3
bind -n C-S-Right resize-pane -R 3
bind -n C-S-Up resize-pane -U 3
bind -n C-S-Down resize-pane -D 3
bind -n C-O split-window -v
# move panes without prefix
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D
bind r source-file ~/.tmux.conf

set -g mouse on

## Clipboard integration
# ctrl+shift+c to send to clipboard
bind C-S-c run "tmux save-buffer - | xclip -i -sel clipboard"
# ctrl+shift+v to paste from clipboard
bind C-S-v run "tmux set-buffer \"$(xclip -o -sel clipboard)\"; tmux paste-buffer"


# Selection with mouse should copy to clipboard right away, in addition to the default action.
unbind -n -Tcopy-mode-vi MouseDragEnd1Pane
bind -Tcopy-mode-vi MouseDragEnd1Pane send -X copy-selection-and-cancel\; run "tmux save-buffer - | xclip -i -sel clipboard > /dev/null"

# Middle click to paste from the clipboard
unbind-key MouseDown2Pane
bind-key -n MouseDown2Pane run "tmux set-buffer \"$(xclip -o -sel clipboard)\"; tmux paste-buffer"

# Drag to re-order windows
bind-key -n MouseDrag1Status swap-window -t=

# Double click on the window list to open a new window
bind-key -n DoubleClick1Status new-window


#  modes
setw -g clock-mode-colour colour5
setw -g mode-attr bold
setw -g mode-fg colour1
setw -g mode-bg colour18

# panes
set -g pane-border-bg colour0
set -g pane-border-fg colour15
set -g pane-active-border-bg colour0
set -g pane-active-border-fg colour10

# statusbar
set -g status-position bottom
set -g status-justify left
set -g status-bg colour18
set -g status-fg colour137
set -g status-attr dim
set -g status-left ''
set -g status-right '#[fg=colour9,bg=colour19,bold] %d/%m #[fg=colour226,bg=colour8,bold] %H:%M:%S '
set -g status-right-length 50
set -g status-left-length 20
